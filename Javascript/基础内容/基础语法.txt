1、外部的 JavaScript：  <script src="myScript.js"></script>   	外部脚本不能包含 <script> 标签。

2、JavaScript 没有任何打印或者输出的函数。

   JavaScript 可以通过不同的方式来输出数据：

    使用 window.alert() 弹出警告框。
    使用 document.write() 方法将内容写到 HTML 文档中。
    使用 innerHTML 写入到 HTML 元素。
    使用 console.log() 写入到浏览器的控制台。

3、变量通常是可变的。字面量是一个恒定的值（“字符”，数字，数组，对象等）。 、

4、语句分隔：“;”

5、JavaScript 关键字（var等）必须以字母、下划线（_）或美元符（$）开始。 

6、注释： //     多行注释以 /* 开始，以 */ 结尾。 

7、区分大小写， 	JavaScript 语句和 JavaScript 变量都对大小写敏感。 

8、JavaScript 中，常见的是驼峰法的命名规则，如 lastName (而不是lastname)。

9、您可以在文本字符串中使用反斜杠对代码行进行换行。document.write("你好 \
世界!");

10、可以在一条语句中声明很多变量。该语句以 var 开头，并使用逗号分隔变量即可。

11、数据类型：字符串（String）、数字(Number)、布尔(Boolean)、数组(Array)、对象(Object)、空（Null）、未定义（Undefined）。

12、JavaScript 数组：var cars=new Array("Saab","Volvo","BMW");

13、Undefined 这个值表示变量不含有值。 可以通过将变量的值设置为 null 来清空变量。

14、当您声明新变量时，可以使用关键词 "new" 来声明其类型：

    var carname=new String;
    var x=      new Number;
    var y=      new Boolean;
    var cars=   new Array;
    var person= new Object;

15、对象属性：键值对通常写法为 name : value (键与值以冒号分割)。 （对象：属性  方法）

    访问对象属性：person.lastName;  或person["lastName"]; 

16、局部 JavaScript 变量：您可以在不同的函数中使用名称相同的局部变量，因为只有声明过该变量的函数才能识别出该变量。

                          只能在函数内部访问它。（该变量的作用域是局部的）。

17、在函数外声明的变量是全局变量，网页上的所有脚本和函数都能访问它。

18、JavaScript 变量的生存期：

    JavaScript 变量的生命期从它们被声明的时间开始。

    局部变量会在函数运行以后被删除。

    全局变量会在页面关闭后被删除。

19、如果您把值赋给尚未声明的变量，该变量将被自动作为全局变量声明。 carname="Volvo";

20、在 JavaScript 中, 作用域为可访问变量，对象，函数的集合。

21、在 HTML 中, 全局变量是 window 对象: 所有数据变量都属于 window 对象。

22、你的全局变量，或者函数，可以覆盖 window 对象的变量或者函数。

    局部变量，包括 window 对象可以覆盖全局变量和函数。

23、常见事件：   onchange   HTML元素改变（input等）

                 onclick    点击

                 onmouseover  鼠标移入

                 onmouseout   鼠标移开

                 onkeydown    按下键盘按键

                onload        页面加载完成

24、字符串中可以访问每个字符： var charcter = car[7];

    字符串长度： car.length  一个空格算一个字符

25、双引号中套双引号------转义符  \"

26、通常， JavaScript 字符串是原始值，可以使用字符创建： var firstName = "John"

    但我们也可以使用 new 关键字将字符串定义为一个对象： var firstName = new String("John")

    typeof x-----查看x类型

27、字符串方法：
charAt() 	返回指定索引位置的字符
charCodeAt() 	返回指定索引位置字符的 Unicode 值
concat() 	连接两个或多个字符串，返回连接后的字符串
fromCharCode() 	将字符转换为 Unicode 值
indexOf() 	返回字符串中检索指定字符第一次出现的位置
lastIndexOf() 	返回字符串中检索指定字符最后一次出现的位置
localeCompare() 	用本地特定的顺序来比较两个字符串
match() 	找到一个或多个正则表达式的匹配
replace() 	替换与正则表达式匹配的子串
search() 	检索与正则表达式相匹配的值
slice() 	提取字符串的片断，并在新的字符串中返回被提取的部分
split() 	把字符串分割为子字符串数组
substr() 	从起始索引号提取字符串中指定数目的字符
substring() 	提取字符串中两个指定的索引号之间的字符
toLocaleLowerCase() 	根据主机的语言环境把字符串转换为小写，只有几种语言（如土耳其语）具有地方特有的大小写映射
toLocaleUpperCase() 	根据主机的语言环境把字符串转换为大写，只有几种语言（如土耳其语）具有地方特有的大小写映射
toLowerCase() 	把字符串转换为小写
toString() 	返回字符串对象值
toUpperCase() 	把字符串转换为大写
trim() 	移除字符串首尾空白
valueOf() 	返回某个字符串对象的原始值

28、 = 赋值  + 数字相加，字符连接


